swagger: '2.0'
info:
  description: EW REST API for SSO - Driver Service
  version: '1.0'
  termsOfService: 'http://www.karumien.com/terms/'
  contact:
    email: info@karumien.com
  title: Driver Service
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
basePath: /api/v1/iam
schemes:
  - http
paths:
  /drivers:
    post:
      summary: Create Driver
      description: Create Driver in target SSO
      operationId: createDriver
      parameters:
        - in: body
          name: Driver
          description: The Driver to create
          schema:
            $ref: '#/definitions/DriverInfo'
            example:
              lastName: Novak
              firstName: Karel
              Drivername: KajaN
              email: KajaN@eurowag.com
      responses:
        '201':
          description: Successfully created
          schema:
            $ref: '#/definitions/DriverInfo'
            example:
              id: 6287994b-0245-4ca7-8eb4-777230b2f91f
              lastName: Novak
              firstName: Karel
              Drivername: KajaN
              email: KajaN@eurowag.com
  /drivers/{id}:
    get:
      summary: "Get detail of the given Driver"
      description: "Method returns detail information about Driver."
      operationId: "getDriver"
      parameters:
        - name: id
          in: path
          description: Filtering by Driver Unique ID
          required: true
          type: string       
      responses:
        '200':
          description: Successfully returned Driver's info
          schema:
            $ref: '#/definitions/DriverInfo'
        '404':
          description: Not found
    delete:
      summary: "Remove existing Driver"
      operationId: "deleteDriver"
      parameters:
        - name: id
          in: path
          description: Filtering by Driver Unique ID
          required: true
          type: string       
      responses:
        '200':
          description: Successfully removed existing Driver
        '404':
          description: Driver Not found
  /drivers/{id}/pin:
    post:
      summary: "Create/Reset Driver PIN"
      description: "Method to create/reset driver's PIN for given driver"
      operationId: "createDriverPin"
      parameters:
        - name: id
          in: path
          description: Filtering by Driver Unique ID
          required: true
          type: string       
        - in: body
          name: pin
          description: PIN for Driver to create/change
          schema:
            $ref: '#/definitions/DriverPin'
            example:
              pin: "1234"
      responses:
        '201':
          description: "Driver PIN has been created/update"
        '404':
          description: Driver Not found  
        '406':
          description: Can't create/update Driver's PIN      
definitions:
  DriverInfo:
    type: object
    description: "Basic information about Driver"
    required:
      - lastName
      - firstName
      - email
      - username
    properties:
      id:
        type: string
        description: Driver's Unique ID 
      lastName:
        type: string
        description: "Last name/ surname of the contact"
        maxLength: 50
      firstName:
        type: string
        description: "First name of the contact"
        maxLength: 50
      username:
        type: string
        description: "Nick name of person for game"
        maxLength: 50
      email:
        type: string
        description: "Primary email (used for Drivername if empty)"
        maxLength: 100
    example:
      id: fe29248c-f3aa-4310-8fcf-91eacdd324xx
      lastName: Novak
      firstName: Karel
      Drivername: KajaN
      email: KajaN@eurowag.com
  DriverPin:
    type: object
    description: "Driver's PIN Definition"
    properties:
      pin:
        type: string
        example: "123456"
        maxLength: 10
        