swagger: '2.0'
info:
  description: EW REST API for SSO - Identity Service - Management of Identities (Users/Contacts)
  version: '1.0'
  termsOfService: 'http://www.karumien.com/terms/'
  contact:
    email: info@karumien.com
  title: Identity Service
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
basePath: /api/v1/iam
schemes:
  - http
paths:
  /identities:
    post:
      summary: Create Identity
      description: Create Identity in target SSO
      operationId: createIdentity
      parameters:
        - in: body
          name: identity
          description: The Identity to create
          schema:
            $ref: '#/definitions/IdentityInfo'
            example:
              lastName: Novak
              firstName: Karel
              username: KajaN
              email: KajaN@eurowag.com
      responses:
        '201':
          description: Successfully created
          schema:
            $ref: '#/definitions/IdentityInfo'
        '409':
          description: Identity already exists (conflict username/contactNumber)
  /identities/{contactNumber}:
    get:
      summary: "Get detail of the given Identity"
      description: "Method returns detail information about Identity."
      operationId: getIdentity
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity unique CRM Contact Number
          required: true
          type: string       
      responses:
        '200':
          description: Successfully returned Identity's info
          schema:
            $ref: '#/definitions/IdentityInfo'
        '409':
          description: Duplicate Identity with same CRM Contact Number
        '410':
          description: Identity Not Found
    put:
      summary: Update Identity
      operationId: updateIdentity
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity unique CRM Contact Number
          required: true
          type: string       
        - name: identity
          in: body
          description: The Identity to update
          schema:
            $ref: '#/definitions/IdentityInfo'
            example:
              lastName: Novak
              firstName: Karel
              username: KajaN
              email: KajaN@eurowag.com
      responses:
        '202':
          description: Successfully updated
          schema:
            $ref: '#/definitions/IdentityInfo'
        '409':
          description: Conflict in username/CRM Contact Number/Navision 4 ID
        '410':
          description: Identity Not Found
    delete:
      summary: "Remove existing Identity"
      operationId: deleteIdentity
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity Unique ID
          required: true
          type: string       
      responses:
        '204':
          description: Successfully removed existing Identity
        '409':
          description: Duplicate Identity with same CRM Contact Number
        '410':
          description: Identity Not Found
  /identities/{contactNumber}/credentials:
    post:
      summary: "Create Identity credentials"
      description: "Method to create Identity credentials for given customer"
      operationId: createIdentityCredentials
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity unique CRM ID
          required: true
          type: string       
        - in: body
          name: credentials
          description: The Credentials for Identity to create/change
          schema:
            $ref: '#/definitions/Credentials'
            example:
              username: "midie"
              password: "#123456."
              temporary: true
      responses:
        '201':
          description: "Identity creadentials has been created or reset"
        '410':
          description: Identity Not Found
        '422':
          description: "Can't create Identity's credentials - Error Codes for Attributes: #/definitions/ErrorDataCodeCredentials"
          schema:
            $ref: '#/definitions/ErrorMessage'
  /identities/nav4/{nav4Id}:
    get:
      summary: "Get detail of the given Identity"
      description: "Method returns detail information about Identity."
      operationId: getNav4Identity
      parameters:
        - name: nav4Id
          in: path
          description: Filtering by Identity unique NAV4 ID
          required: true
          type: string       
      responses:
        '200':
          description: Successfully returned Identity's info
          schema:
            $ref: '#/definitions/IdentityInfo'
        '410':
          description: Gone
  /identities/nav4/{nav4Id}/roles:
    get:
      summary: "Get Identity's Roles Ids"
      operationId: getNav4IdentityRoleIds
      parameters:
        - name: nav4Id
          in: path
          description: Filtering by Identity unique NAV4 ID
          required: true
          type: string
      responses:
        '200':
          description: Successfully returned Identity's Roles
          schema:
            type: array
            items:
              type: string
        '410':
          description: Identity not found
  /identities/nav4/{nav4Id}/roles/{roleId}:
    get:
      summary: "Get assigned Roles on Identity"
      operationId: "getNav4IdentityRole"
      parameters:
        - name: nav4Id
          in: path
          description: Filtering by Identity unique NAV4 ID
          required: true
          type: string
        - name: roleId
          in: path
          description: Filtering by Role ID
          required: true
          type: string  
      responses:
        '200':
          description: Role is assigned to Identity
        '410':
          description: Identity not found
        '422':
          description: Role not assigned
    put:
      summary: "Assign Role to Identity"
      operationId: "assignNav4IdentityRole"
      parameters:
        - name: nav4Id
          in: path
          description: Filtering by Identity unique NAV4 ID
          required: true
          type: string
        - name: roleId
          in: path
          description: Filtering by Role ID
          required: true
          type: string    
      responses:
        '202':
          description: Successfully assigned Role on Identity
        '410':
          description: Identity not found
        '422':
          description: Role for Identity not assigned      
    delete:
      summary: "Remove Role on Identity"
      operationId: "unassignNav4IdentityRole"
      parameters:
        - name: nav4Id
          in: path
          description: Filtering by Identity unique NAV4 ID
          required: true
          type: string
        - name: roleId
          in: path
          description: Filtering by Identity ID
          required: true
          type: string    
      responses:
        '202':
          description: Successfully unassigned Role from Identity
        '410':
          description: Identity not found
        '422':
          description: Role not unassigned
  /identities/nav4/{nav4Id}/credentials:
    post:
      summary: "Create Identity credentials"
      description: "Method to create Identity credentials for given customer"
      operationId: createIdentityNav4Credentials
      parameters:
        - name: nav4Id
          in: path
          description: Filtering by Identity unique NAV4 ID
          required: true
          type: string       
        - in: body
          name: credentials
          description: The Credentials for Identity to create/change
          schema:
            $ref: '#/definitions/Credentials'
            example:
              username: "midie"
              password: "#123456."
              temporary: true
      responses:
        '201':
          description: "Identity creadentials has been created or reset"
        '410':
          description: Identity Not Found
        '422':
          description: "Can't create Identity's credentials - Error Codes for Attributes: #/definitions/ErrorDataCodeCredentials"
          schema:
            $ref: '#/definitions/ErrorMessage'
  /identities/{contactNumber}/credentials/block:
    put:
      summary: "Block Identity"
      operationId: blockIdentity
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity unique CRM ID
          required: true
          type: string       
      responses:
        '202':
          description: "Identity successfully blocked"
        '410':
          description: Identity Not Found
    delete:
      summary: "Unblock Identity"
      operationId: unblockIdentity
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity unique CRM ID
          required: true
          type: string       
      responses:
        '204':
          description: "Identity successfully unblocked"
        '410':
          description: Identity Not Found
  /identities/{contactNumber}/credentials/reset:
    post:
      summary: "Reset Identity credentials"
      description: "Method to reset Identity credentials"
      operationId: resetIdentityCredentials
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity unique CRM ID
          required: true
          type: string       
      responses:
        '201':
          description: "Successfully sent email for password reset"
        '410':
          description: Identity Not Found
        '422':
          description: Can't reset Identity's credentials
  /identities/{contactNumber}/pin:
    post:
      summary: "Create/Reset Driver PIN"
      description: "Method to create/reset driver's PIN for given driver"
      operationId: "createDriverPin"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Driver Unique ID
          required: true
          type: string       
        - in: body
          name: pin
          description: PIN for Driver to create/change
          schema:
            $ref: '#/definitions/DriverPin'
            example:
              pin: "1234"
      responses:
        '201':
          description: "Driver PIN has been created/update"
        '410':
          description: Driver Gone  
        '422':
          description: Can't create/update Driver's PIN 
    get:
      summary: "Get Driver PIN"
      operationId: "getDriverPin"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Driver Unique ID
          required: true
          type: string       
      responses:
        '200':
          description: "Driver PIN"
          schema:
            $ref: '#/definitions/DriverPin'
        '410':
          description: Driver or pin Gone  
    delete:
      summary: "Delete Driver PIN"
      operationId: "deleteDriverPin"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Driver Unique ID
          required: true
          type: string       
      responses:
        '200':
          description: "Driver PIN has been deleted"
        '410':
          description: Driver Gone 
  /identities/{contactNumber}/impersonate:
    post:
      summary: "Impersonate Identity"
      description: "Method for impersonation of specified Identity"
      operationId: "impersonateIdentity"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity unique CRM ID
          required: true
          type: string       
      responses:
        '200':
          description: "Identity has been impersonated"
        '410':
          description: Identity Not Found
  /identities/{contactNumber}/logout:
    post:
      summary: "Logout Identity's session"
      description: "Method for logout session of specified Identity"
      operationId: "logoutIdentity"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity unique CRM ID
          required: true
          type: string       
      responses:
        '200':
          description: "Identity has been logged out of all sessions"
        '410':
          description: Identity Not Found
  /identities/{contactNumber}/roles/binary:
    get:
      summary: "Get assigned Roles on Identity in Binary Representation"
      operationId: "getIdentityRolesBinary"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity CRM ID
          required: true
          type: string   
      produces:
        - text/plain
      responses:
        '200':
          description: Identity's assigned Roles in Binary Representation 
        '410':
          description: Identity Not Found  
  /identities/{contactNumber}/roles:
    get:
      summary: "Get Identity's Roles Ids"
      operationId: getIdentityRoleIds
      parameters:
#        - name: accountNumber
#          in: path
#          description: Filtering by Account unique CRM ID
#          required: true
#          type: string
        - name: contactNumber
          in: path
          description: Filtering by Identity unique CRM ID
          required: true
          type: string       
      responses:
        '200':
          description: Successfully returned Identity's Roles
          schema:
            type: array
            items:
              type: string
        '410':
          description: Identity Not Found
    put:
      summary: "Assign roles on Identity"
      operationId: "assignIdentityRoles"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity CRM ID
          required: true
          type: string       
        - in: body
          name: roles
          description: List of Identity's ID to assign
          schema:
            type: array
            items:
              type: string                    
      responses:
        '202':
          description: Successfully assigned Roles to Identity
        '410':
          description: Identity Not Found
    patch:
      summary: "Assign roles on Identity"
      operationId: "updateIdentityRoles"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity CRM ID
          required: true
          type: string       
        - in: body
          name: roles
          description: List of Identity's ID to assign
          schema:
            type: array
            items:
              type: string                    
      responses:
        '206':
          description: Successfully patched (assigned) Roles to Identity
        '410':
          description: Identity Not Found
    delete:
      summary: "Unassign Roles on Identity"
      operationId: "unassignIdentityRoles"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity CRM ID
          required: true
          type: string       
        - in: body
          name: roles
          description: List of Identity's ID to unassign
          schema:
            type: array
            items:
              type: string                    
      responses:
        '202':
          description: Successfully unsassigned Roles from Identity
        '410':
          description: Identity Not Found
  /identities/{contactNumber}/roles/{roleId}:
    get:
      summary: "Get assigned Roles on Identity"
      operationId: "getIdentityRole"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity CRM ID
          required: true
          type: string   
        - name: roleId
          in: path
          description: Filtering by Identity ID
          required: true
          type: string   
      responses:
        '200':
          description: Role is assigned to Identity
        '410':
          description: Identity Not Found
        '422':
          description: Role not assigned
    put:
      summary: "Assign Role to Identity"
      operationId: "assignIdentityRole"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity CRM ID
          required: true
          type: string       
        - name: roleId
          in: path
          description: Filtering by Identity ID
          required: true
          type: string    
      responses:
        '202':
          description: Successfully assigned Role on Identity
        '410':
          description: Identity Not Found
        '422':
          description: Role for Identity not assigned
    delete:
      summary: "Remove Role on Identity"
      operationId: "unassignIdentityRole"
      parameters:
        - name: contactNumber
          in: path
          description: Filtering by Identity CRM ID
          required: true
          type: string       
        - name: roleId
          in: path
          description: Filtering by Identity ID
          required: true
          type: string    
      responses:
        '204':
          description: Successfully Unassigned Role
        '410':
          description: Identity Not Found
        '422':
          description: Role not unassigned
  /identities/exists:
    get:
      summary: "Check if exist Identity by specified attributes"
      operationId: exists
      parameters:
        - in: query
          name: username
          description: Identity existency check by username
          required: false
          type: string
        - in: query
          name: contactNumber
          description: Identity existency check by CRM Contact Number
          required: false
          type: string 
        - in: query
          name: nav4Id
          description: Identity existency check by NAV4 ID 
          required: false
          type: string 
      responses:
        '200':
          description: Found Identity specified by filter
        '410':
          description: Identity specified by filter not found
definitions:
  ErrorData:
    type: object
    description: EW ErrorMessage model data
    required:
    - code
    properties:
      code:
        type: string
        description: ie. invalid-phone-number-format
        maxLength: 50
      attribute: 
        type: string
        maxLength: 250
        description: ie. phoneNumberPrimary
      description:
        type: string
        maxLength: 1000
        description: ie. Invalid phone number format. Valid is XXX XXX XXX
      data:
        type: object
  ErrorCode:
    type: string
    description: Master Error Code
    enum:
      - CLIENT_ERROR
  ErrorMessage:
    type: object
    description: EW ErrorMessage model
    required:
    - errno
    - errcode
    properties:
      errno: 
        type: integer
        default: -1
      errcode: 
        $ref: "#/definitions/ErrorCode"
      errmsg: 
        type: string
        maxLength: 250
        description: Optional error message
      errdata:
        type: array
        items:
          $ref: "#/definitions/ErrorData"
  IdentityInfo:
    type: object
    description: "Basic information about Identity"
#    required:
#      - accountNumber
#      - contactNumber
    properties:
      identityId:
        type: string
        description: Identity's ID 
      accountNumber:
        type: string
        description: Identity's CRM Account ID
      contactNumber:
        type: string
        description: Identity's Unique ID 
      nav4Id:
        type: string
        description: Identity's Unique NAV4 ID 
      lastName:
        type: string
        description: "Last name/ surname of the Identity"
        maxLength: 50
      firstName:
        type: string
        description: "First name of the Identity"
        maxLength: 50
      username:
        type: string
        description: "Unique username"
        maxLength: 50
      email:
        type: string
        description: "Primary email used primary for password reset"
        maxLength: 100
      emailVerified:
        type: boolean
        description: "Verified status of itentity email"
      phone:
        type: string
        description: "Phone used primary for OTP"
        maxLength: 30
      globalEmail:
        type: string
        description: "Contact email - can be company global"
        maxLength: 100
      locale:
        type: string
        description: "User's default Locale"
        maxLength: 50  
      crmAccountId:
        type: string
        description: Backward Compatibility
      crmContactId:
        type: string
        description: Backward Compatibility 
      binaryRights:
        type: string
        description: "User's rights"
    example:
      accountNumber: 31034
      contactNumber: fe29248c-f3aa-4310-8fcf-91eacdd324xx
      lastName: Novak
      firstName: Karel
      email: KajaN@eurowag.com
      emailVerified: true
  Credentials:
    type: object
    description: "Object for setting of Identity credential"
    properties:
      username:
        type: string
        description: "Unique username"
        maxLength: 50
      password:
        type: string
        maxLength: 50
      currentPassword:
        type: string
        maxLength: 50
      temporary:
        type: boolean
        description: "Temporary - need reset after first login"
    example:
      - username: "midie"
        password: "#123456."
      - password: "#123456."
        temporary: true      
      - password: "#123456."
        currentPassword: "oldPassword"
        temporary: true      
  DriverPin:
    type: object
    description: "Driver's PIN Definition"
    required:
      - pin
    properties:
      pin:
        type: string
        example: "123456"
        maxLength: 10
  RoleInfo:
    type: object
    description: "Basic information about Role"
    required:
      - roleId
    properties:
      roleId:
        type: string
        description: "Unique Role ID (Role Name)"
        maxLength: 50
      description:
        type: string
        description: "Role description"
        maxLength: 255
      accountNumber:
        type: string
        description: Custom role for account
      translation:
        type: string
        description: "Role translation"
        maxLength: 255
      roles:
        type: array
        items:
          type: string
      rights:
        type: array
        items:
          type: string