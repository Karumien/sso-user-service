swagger: '2.0'
info:
  description: EW REST API for SSO - Module Service - Management of Modules (Licences)
  version: '1.0'
  termsOfService: 'http://www.karumien.com/terms/'
  contact:
    email: info@karumien.com
  title: Module Service
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
basePath: /api/v1/iam
schemes:
  - http
paths:
  /modules:
    post:
      summary: Create Module
      description: Create Module in target SSO
      operationId: createModule
      parameters:
        - in: body
          name: Module
          description: The Module to Create
          schema:
            $ref: '#/definitions/ModuleInfo'
      responses:
        '201':
          description: Successfully created Module
          schema:
            $ref: '#/definitions/ModuleInfo'
    get:
      summary: "Get all known Modules"
      operationId: "getModules"
      responses:
        '200':
          description: Successfully returned Module's Info
          schema:
            type: array
            items:
              $ref: '#/definitions/ModuleInfo'
  /modules/{moduleId}:
    get:
      summary: "Get detail of the given Module"
      description: "Method returns detail information about Module."
      operationId: "getModule"
      parameters:
        - name: moduleId
          in: path
          description: Filtering by Module Unique ID
          required: true
          type: string       
      responses:
        '200':
          description: Successfully returned Module's Info
          schema:
            $ref: '#/definitions/ModuleInfo'
        '410':
          description: Module not found
    put:
      summary: "Update informations about module"
      operationId: "updateModule"
      parameters:
        - name: moduleId
          in: path
          description: Filtering by Module Unique ID
          required: true
          type: string       
      responses:
        '202':
          description: Successfully updated Module's Info
          schema:
            $ref: '#/definitions/ModuleInfo'
        '410':
          description: Module not found
    delete:
      summary: "Remove existing Module"
      operationId: "deleteModule"
      parameters:
        - name: moduleId
          in: path
          description: Filtering by Module Unique ID
          required: true
          type: string       
      responses:
        '204':
          description: Successfully removed existing Module
        '410':
          description: Module Gone
definitions:
  ModuleInfo:
    type: object
    description: "Basic information about Module"
    required:
      - moduleId
    properties:
      moduleId:
        type: string
        example: "FINANCE"
        maxLength: 40
      name:
        type: string
        description: Name of group
      translation:
        type: string
        description: Translated name of group
      businessPriority:
        type: integer
        description: Order by priority (1 is highest priority/first)      
      groups:
        type: array
        items:
          $ref: "#/definitions/RightGroup"
  RightGroup:
    type: object
    description: Rigth's logical group
    properties:
      groupId:
        type: string
        description: unique prefix ie. FINANCE_TRANSACTION
      name:
        type: string
        description: Name of group
      translation:
        type: string
        description: Translated name of group
      serviceId:
        type: string
        example: "SERVICE_TLM01"
        maxLength: 40    
        description: Filtered by buyed service by account
      businessPriority:
        type: integer
        description: Order by priority (1 is highest priority/first)